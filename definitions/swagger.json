{
    "swagger": "2.0",
    "info": {
        "title": "CUView API",
        "description": "Cumulus Networks Insights",
        "version": "0.1.0"
    },
    "host": "localhost:9000",
    "schemes": [
        "http"
    ],
    "basePath": "/api/v1/state",
    "produces": [
        "application/json"
    ],
    "x-cumulus-commands": {
    	"netdSocket": "/var/run/nclu/uds",
    	"netdCommand": "/usr/bin/net",
    	"vtysh": "/usr/bin/vtysh"
    },
    "paths": {
        "/interfaces": {
            "get": {
                "summary": "List of Interfaces",
                "description": "The Interfaces endpoint returns a list of network interfaces and their relevant interface related details.\n",
                "parameters": [
                    {
                        "name": "interface",
                        "in": "query",
                        "description": "Specific the interface to query.",
                        "type": "string"
                    },
                    {
                        "name": "minify",
                        "in": "query",
                        "description": "Whether or not to minify JSON output.\nDefault: true",
                        "type": "string"
                    }
                ],
                "tags": [
                    "Interfaces"
                ],
                "responses": {
                    "200": {
                        "description": "An array of Network Interfaces",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Interfaces"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
            	"x-cumulus-options": {
            		"netd": true,
            		"command": "show interface",
                        "parameter_handler": "GetInterfaceParams"
            	}
            }
        },
        "/bgpv4neighbors": {
            "get": {
                "summary": "BGPv4 Neighbors",
                "description": "The BGPv4 Neighbors endpoint returns a list of BGPv4 Neighbor routers and their relevant details.\n",
                "parameters": [
                    {
                        "name": "neighbor",
                        "in": "query",
                        "description": "Specify the BGPv4 Neighbor address to query.",
                        "type": "string"
                    },
                    {
                        "name": "minify",
                        "in": "query",
                        "description": "Whether or not to minify JSON output.\nDefault: true",
                        "type": "string"
                    }
                ],
                "tags": [
                    "BGPv4 Neighbors"
                ],
                "responses": {
                    "200": {
                        "description": "An array of BGPv4 Neighbor Routers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BGPv4Neighbors"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "x-cumulus-options": {
                	"netd": true,
                	"command": "show bgp ipv4 unicast summary",
                        "parameter_handler": "GetBgpv4NeighborsParams"
                }
            }
        },
        "/ipv4routes": {
            "get": {
                "summary": "IPv4 Route Entries",
                "description": "The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.",
                "parameters": [
                    {
                        "name": "route",
                        "in": "query",
                        "description": "Specify the IPv4 Route to query.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "minify",
                        "in": "query",
                        "description": "Whether or not to minify JSON output.\nDefault: true",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "IPv4 Routes"
                ],
                "responses": {
                    "200": {
                        "description": "An array of products",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IPv4Routes"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "x-cumulus-options": {
                	"netd": false,
                	"command": "show ip route",
                        "parameter_handler": "GetIpv4RoutesParams"
                }
            }
        }
    },
    "definitions": {
        "Product": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles."
                },
                "description": {
                    "type": "string",
                    "description": "Description of product."
                },
                "display_name": {
                    "type": "string",
                    "description": "Display name of product."
                },
                "capacity": {
                    "type": "string",
                    "description": "Capacity of product. For example, 4 people."
                },
                "image": {
                    "type": "string",
                    "description": "Image URL representing the product."
                }
            }
        },
        "PriceEstimate": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles"
                },
                "currency_code": {
                    "type": "string",
                    "description": "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
                },
                "display_name": {
                    "type": "string",
                    "description": "Display name of product."
                },
                "estimate": {
                    "type": "string",
                    "description": "Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or \"Metered\" for TAXI."
                },
                "low_estimate": {
                    "type": "number",
                    "description": "Lower bound of the estimated price."
                },
                "high_estimate": {
                    "type": "number",
                    "description": "Upper bound of the estimated price."
                },
                "surge_multiplier": {
                    "type": "number",
                    "description": "Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier."
                }
            }
        },
        "Profile": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "description": "First name of the Uber user."
                },
                "last_name": {
                    "type": "string",
                    "description": "Last name of the Uber user."
                },
                "email": {
                    "type": "string",
                    "description": "Email address of the Uber user"
                },
                "picture": {
                    "type": "string",
                    "description": "Image URL of the Uber user."
                },
                "promo_code": {
                    "type": "string",
                    "description": "Promo code of the Uber user."
                }
            }
        },
        "Interface": {
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "Unique identifier for the Interface"
                }
            }
        },
        "Activity": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "Unique identifier for the activity"
                }
            }
        },
        "Activities": {
            "type": "object",
            "properties": {
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Position in pagination."
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of items to retrieve (100 max)."
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of items available."
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Activity"
                    }
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}
